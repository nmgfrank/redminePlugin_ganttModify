require_dependency 'redmine/helpers/gantt'

module LibRedmineHelpersPatch
    def self.included(base)
        base.send(:include, InstanceMethods)
        base.class_eval do 
        end
    end

    module InstanceMethods

        def render(options={})
            options = {:top => 0, :top_increment => 20,
                       :indent_increment => 20, :render => :subject,
                       :format => :html}.merge(options)
            indent = options[:indent] || 4
            @subjects = '' unless options[:only] == :lines
            @lines = '' unless options[:only] == :subjects
            @number_of_rows = 0
            Project.project_tree(projects) do |project, level|
              options[:indent] = indent + level * options[:indent_increment]
              render_project_without_concidering_versions(project, options)
              break if abort?
            end
            @subjects_rendered = true unless options[:only] == :lines
            @lines_rendered = true unless options[:only] == :subjects
            render_end(options)
        end

        def render_project_without_concidering_versions(project, options={})
            subject_for_project(project, options) unless options[:only] == :lines
            line_for_project(project, options) unless options[:only] == :subjects
            options[:top] += options[:top_increment]
            options[:indent] += options[:indent_increment]
            @number_of_rows += 1
            return if abort?
            issues = project_issues(project)
            sort_issues!(issues)
            if issues
              render_issues(issues, options)
              return if abort?
            end

            # Remove indent to hit the next sibling
            options[:indent] -= options[:indent_increment]
        end

    end


end

Redmine::Helpers::Gantt.send(:include, LibRedmineHelpersPatch)
